import Blunder from "./blunder/blunder";

interface IMaps {
  [key: string]: string[];
}

const maps: IMaps = {
  simple_moves: ["#####", "#@  #", "#   #", "#  $#", "#####"],
  obstacles: [
    "########",
    "# @    #",
    "#     X#",
    "# XXX  #",
    "#   XX #",
    "#   XX #",
    "#     $#",
    "########",
  ],
  priorities: [
    "########",
    "#     $#",
    "#      #",
    "#      #",
    "#  @   #",
    "#      #",
    "#      #",
    "########",
  ],
  straight_line: [
    "########",
    "#      #",
    "# @    #",
    "# XX   #",
    "#  XX  #",
    "#   XX #",
    "#     $#",
    "########",
  ],
  path_modifier: [
    "##########",
    "#        #",
    "#  S   W #",
    "#        #",
    "#  $     #",
    "#        #",
    "#@       #",
    "#        #",
    "#E     N #",
    "##########",
  ],
  breaker_mode: [
    "##########",
    "# @      #",
    "# B      #",
    "#XXX     #",
    "# B      #",
    "#    BXX$#",
    "#XXXXXXXX#",
    "#        #",
    "#        #",
    "##########",
  ],
  inverter: [
    "##########",
    "#    I   #",
    "#        #",
    "#       $#",
    "#       @#",
    "#        #",
    "#       I#",
    "#        #",
    "#        #",
    "##########",
  ],
  teleport: [
    "##########",
    "#    T   #",
    "#        #",
    "#        #",
    "#        #",
    "#@       #",
    "#        #",
    "#        #",
    "#    T  $#",
    "##########",
  ],
  brocken_wall: [
    "##########",
    "#        #",
    "#  @     #",
    "#  B     #",
    "#  S   W #",
    "# XXX    #",
    "#  B   N #",
    "# XXXXXXX#",
    "#       $#",
    "##########",
  ],
  all_together: [
    "###############",
    "#      IXXXXX #",
    "#  @          #",
    "#             #",
    "#             #",
    "#  I          #",
    "#  B          #",
    "#  B   S     W#",
    "#  B   T      #",
    "#             #",
    "#         T   #",
    "#         B   #",
    "#            $#",
    "#        XXXX #",
    "###############",
  ],
  loop: [
    "###############",
    "#      IXXXXX #",
    "#  @          #",
    "#E S          #",
    "#             #",
    "#  I          #",
    "#  B          #",
    "#  B   S     W#",
    "#  B   T      #",
    "#             #",
    "#         T   #",
    "#         B   #",
    "#N          W$#",
    "#        XXXX #",
    "###############",
  ],
  multiple_loops: [
    "###############",
    "#  #@#I  T$#  #",
    "#  #    IB #  #",
    "#  #     W #  #",
    "#  #      ##  #",
    "#  #B XBN# #  #",
    "#  ##      #  #",
    "#  #       #  #",
    "#  #     W #  #",
    "#  #      ##  #",
    "#  #B XBN# #  #",
    "#  ##      #  #",
    "#  #       #  #",
    "#  #     W #  #",
    "#  #      ##  #",
    "#  #B XBN# #  #",
    "#  ##      #  #",
    "#  #       #  #",
    "#  #       #  #",
    "#  #      ##  #",
    "#  #  XBIT #  #",
    "#  #########  #",
    "#             #",
    "# ##### ##### #",
    "# #     #     #",
    "# #     #  ## #",
    "# #     #   # #",
    "# ##### ##### #",
    "#             #",
    "###############",
  ],
};

function getRandomInt(min: number, max: number): number {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

const keys: string[] = Object.keys(maps);
const randomKey: string = keys[getRandomInt(0, keys.length - 1)];
const randomMap = maps[randomKey];

new Blunder(randomMap).startMoving();
console.log(`Selected map: ${randomKey}`);
